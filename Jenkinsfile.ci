pipeline {
    agent any
    
    parameters {
        string(name: 'BRANCH_NAME', defaultValue: 'main', description: 'Branch to build' )
    }
    
    environment {
        DOCKER_HUB_CREDS = credentials('dockerhub')
        DOCKER_HUB_USERNAME = "${DOCKER_HUB_CREDS_USR}"
        COMMIT_ID = sh(script: 'git rev-parse --short HEAD', returnStdout: true).trim()
    }
    
    stages {
        stage('Checkout') {
            steps {
                checkout([$class: 'GitSCM', 
                    branches: [[name: "${params.BRANCH_NAME}"]], 
                    userRemoteConfigs: [[url: 'https://github.com/OpsInUs/Petclinic-02']]
                ] )
            }
        }
        
        stage('Build') {
            steps {
                sh './mvnw clean package -DskipTests'
            }
        }
        
        stage('Build and Push Docker Images') {
            steps {
                script {
                    def services = ['admin-server', 'api-gateway', 'customers-service', 'discovery-server', 'vets-service', 'visits-service', 'genai-service','config-server']
                    
                    services.each { service ->
                        dir(service) {
                            sh """
                            cp ../docker/Dockerfile .
                            docker build -t ${DOCKER_HUB_USERNAME}/petclinic-${service}:${COMMIT_ID} .
                            docker tag ${DOCKER_HUB_USERNAME}/petclinic-${service}:${COMMIT_ID} ${DOCKER_HUB_USERNAME}/petclinic-${service}:latest
                            echo ${DOCKER_HUB_CREDS_PSW} | docker login -u ${DOCKER_HUB_USERNAME} --password-stdin
                            docker push ${DOCKER_HUB_USERNAME}/petclinic-${service}:${COMMIT_ID}
                            docker push ${DOCKER_HUB_USERNAME}/petclinic-${service}:latest
                            """
                        }
                    }
                }
            }
        }
    }
    
    post {
        always {
            cleanWs()
        }
    }
}
